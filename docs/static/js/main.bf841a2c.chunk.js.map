{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGift","GifExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACAQ,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAAEpB,IAEEqB,EDfwBM,CAAa3B,GAA/Ba,EAAb,EAAQN,KAAYa,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKpB,IACHoB,GAAW,mBAAGJ,UAAU,uCAAb,wBACb,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEXpBiB,EAAY,WAErB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,gCACI,4CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACK4C,EAAWpB,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCXzB8B,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.bf841a2c.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [InputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if( InputValue.trim().length > 2){\n            setCategories(cate => [InputValue, ...cate]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>{InputValue}</h2>\n            <input \n            type=\"text\"\n            value={InputValue}\n            onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","// 05zDPND6is2XkRWDrHWdFUd1F1YKE2BU\n// api.giphy.com/v1/gifs/search\nexport const getGift = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=05zDPND6is2XkRWDrHWdFUd1F1YKE2BU&limit=10`;\n    const resp = await fetch(url);\n    const {data}  = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGift } from '../hooks/useFetchGift'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const  {data:images,loading} = useFetchGift(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            { loading && <p className=\"animate__animated animate__heartBeat\">Cargando..</p>}\n            <div className=\"card-grid\">\n                {images.map( (img) => (\n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react'\nimport { getGift } from '../helpers/getGifs'\n\nexport const useFetchGift = (category)=> {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n        getGift(category)\n            .then(imgs => {\n                setTimeout(()=>{\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                }, 3000);\n            })\n    }, [ category ])\n\n    return state;\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpert = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <div>\n            <h2>GiftExpert</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories}/>\n            <ol>\n                {categories.map((category)=>  \n                    <GifGrid \n                    key={category}\n                    category={category}\n                    />\n                )}\n            </ol>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpert } from './GifExpert';\nimport './index.css';\n\nReactDOM.render(<GifExpert />,document.getElementById('root'));\n"],"sourceRoot":""}